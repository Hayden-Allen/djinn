- questions
	- reset ids on scene switch?
	- mesh_instance dirty flag/call mesh_instance_batch::update when transform changed?
	- Scene.destroySelf()
	- disable bvh movement?
	- HOT_RELOAD/NOT_RELOAD macro?
	- move ma_engine into sound_source_manager/asset_service?
	- get rid of render service?
	- animation jumping on loop
	- set_rot_parent?

- now
- physics
	- collidenslide
		- doesn't work with gravity
	- collision callbacks (only walk when on ground)
		- entity and phorm derive from tagged_scene_object
		- Scene.Physics.bind(PhysicsID, (EntityID | PhormID))
		- the physics_object gets a pointer to the entity
		- in physics_object_manager::update, after m_world->stepSimulation, each object with an entity pointer is tested via m_world->contactTest
		- addSingleResult forwards everything to __collide()
	- hatsify physics_object, function order/cleanup
	- fall through bvh
	- physics_object_manager::update order needs to respect scene graph?
- graphics
	- buggy local + parent rotation
	- jittery debug hitbox
	- bridge/roof sometimes not drawing/no hitbox
	- implement different lights
	- vines z-fighting
	- do everything in camera space to avoid artifacts
- other
	- scripts OOP stl
	- more scene_service factoring

- later
	- retained_buffer::load => buffer::load (buffer doesn't get save though)
	- powertranzphormr mgl::input_file => haul::input_file
	- load/save take haul::input_file* const

	- mesh_watcher_base/static_mesh_watcher/animated_mesh_watcher
	- mesh_instance_batch testing
		- create instances with different shaders
		- removing works at all
		- removing instance at capacity threshold deletes now-unused ubo
		- removing all instances using a shader deletes that instance

- even later
	- framebuffer_u8/f32?
	- deferred renderer
	- multiple cameras
	- visibility mask (Scene.MeshInstance.setVisible) camera mask?
	- move to mgl::layer system
	- distribution asset pipeline
	- virtual filesystem

- latest
	- per-camera effects


